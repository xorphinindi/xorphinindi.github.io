<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

// wave variables
path = null;
waves = 0;
enemies = 0;
start = false;
canSpawn = true;

// Health and money variables
playerHP = 0;
money = 0;

// Tower cost variables
towerOneCost = 100;
towerTwoCost = 150;
iceTowerCost = 125;

// Tower menu variables
towerOnePicked = false;
towerTwoPicked = false;
iceTowerPicked = false;

// Unlock variables
iceTowerUnlocked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check player health

if (playerHP &lt;= 0)
{
    show_message("Game Over");
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select tower from menu

if (mouse_check_button_pressed(mb_left))
{
    if (mouse_y &gt;= room_height - 64 &amp;&amp; mouse_y &lt;= room_height - 32)
    {
        if (mouse_x &gt;= 32 &amp;&amp; mouse_x &lt;= 64)
            if (! towerTwoPicked &amp;&amp; ! iceTowerPicked)
            towerOnePicked = true;
            
        if (mouse_x &gt;= 96 &amp;&amp; mouse_x &lt;= 128)
            if (! towerOnePicked &amp;&amp; ! iceTowerPicked)
            towerTwoPicked = true;
            
        if (mouse_x &gt;= 160 &amp;&amp; mouse_x &lt;= 192 &amp;&amp; iceTowerUnlocked)
            if (! towerTwoPicked &amp;&amp; ! towerOnePicked)
                iceTowerPicked = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Upgrade Tower

var towerID;

if (mouse_check_button_pressed(mb_left))
{
    towerID = collision_point(mouse_x, mouse_y, obj_towerParent, true, true);
    if (towerID)
    {
        if (towerID.object_index == obj_towerOne)
        {
            if (towerID.level &lt; 2)
                if (money &gt;= 50)
                {
                    towerID.level = 2;
                    money -= 50;
                }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sell Tower

var towerID;

if (mouse_check_button_pressed(mb_right))
{
    towerID = collision_point(mouse_x, mouse_y, obj_towerParent, true, true);
    if (towerID)
    {
        if (towerID.object_index == obj_towerOne)
        {
            if (towerID.level &lt; 2)
            {
                money += 75;
                with (towerID)
                    instance_destroy();
            }
            else if (towerID.level == 2)
            {
                money += round(50 * 0.75);
                towerID.level = 1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Place tower at mouse position

if (mouse_check_button_pressed(mb_left))
{
    if(towerOnePicked)
    {
        placeTower(towerOneCost, obj_towerOne);
        towerOnePicked = false;
    }

    if(towerTwoPicked)
    {
        placeTower(towerTwoCost, obj_towerTwo);
        towerTwoPicked = false;
    }
    
    if (iceTowerPicked)
    {
        placeTower(iceTowerCost, obj_iceTower);
        iceTowerPicked = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw health and money

draw_set_halign(fa_left);

draw_text_color(0, 32, "Money: " + string(money), c_yellow, c_yellow, c_yellow, c_yellow, 1);

for (var i = 0; i &lt; playerHP; i++)
{
    draw_sprite(spr_playerHP, 0, i * 32, 0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw tower selection menu

draw_rectangle_color(0, room_height - 96, room_width, room_height, c_black, c_black, c_black, c_black, c_black);

draw_sprite(spr_towerOne, 0, 48, room_height - 48);

draw_sprite(spr_towerTwo, 0, 112, room_height - 48);

if (iceTowerUnlocked)
{
    draw_sprite(spr_iceTower, 0, 177, room_height - 48);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw tower carried

if (towerOnePicked)
{
    draw_sprite_ext(spr_towerOne, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.5);
    draw_circle(mouse_x, mouse_y, 100, c_red);
}

if (towerTwoPicked)
{
    draw_sprite_ext(spr_towerTwo, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.5);
    draw_circle(mouse_x, mouse_y, 150, c_red);
}

if (iceTowerPicked)
{
    draw_sprite_ext(spr_iceTower, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.5);
    draw_circle(mouse_x, mouse_y, 80, c_red);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Highlight selected tower

if (mouse_y &gt;= room_height - 64 &amp;&amp; mouse_y &lt;= room_height - 32)
{
    if (mouse_x &gt;= 32 &amp;&amp; mouse_x &lt;= 64)
        draw_roundrect_color(30, room_height - 66, 65, room_height - 31, c_white, c_green, true);
            
    if (mouse_x &gt;= 96 &amp;&amp; mouse_x &lt;= 128)
        draw_roundrect_color(94, room_height - 66, 129, room_height - 31, c_white, c_green, true);
        
    if (mouse_x &gt;= 160 &amp;&amp; mouse_x &lt;= 196 &amp;&amp; iceTowerUnlocked)
        draw_roundrect_color(160, room_height - 66, 193, room_height - 31, c_white, c_green, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start game

start = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
